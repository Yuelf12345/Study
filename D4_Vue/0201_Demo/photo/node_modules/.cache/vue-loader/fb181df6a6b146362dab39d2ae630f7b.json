{"remainingRequest":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\src\\views\\Login.vue","mtime":1675735305151},{"path":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1675735787205},{"path":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\node_modules\\babel-loader\\lib\\index.js","mtime":1675735787078},{"path":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1675735787205},{"path":"C:\\Vue\\Y\\XM\\teaching-vuejs\\packages\\photo\\node_modules\\vue-loader\\lib\\index.js","mtime":1675735776133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyBpbXBvcnQgeyBmZXRjaExvZ2luIH0gZnJvbSAiQC9hcGkiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBydWxlRm9ybTogew0KICAgICAgICB1c2VybmFtZTogIiIsDQogICAgICAgIHBhc3N3b3JkOiAiIg0KICAgICAgfSwNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIHVzZXJuYW1lOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgdHlwZTogInN0cmluZyIsDQogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICAgICAgICAgIHRyaWdnZXI6ICJibHVyIiwNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXmraPnoa7nmoTotKblj7flkI0iDQogICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICBwYXNzd29yZDogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICJzdHJpbmciLA0KICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIsDQogICAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl5q2j56Gu55qE5a+G56CBIg0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzdWJtaXRGb3JtKCkgew0KICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZSgodmFsaWQsIGZpZWxkcykgPT4gew0KICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICAvLyDlj6/ku6Xov5vlhaXkuLvpobXpnaINCiAgICAgICAgICAvLyDnmbvlvZUgLT4g5oiQ5Yqf5LmL5ZCO6LCD5pW05Yiw5Li76aG1DQogICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IHRoaXMucnVsZUZvcm07DQogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImxvZ2luIiwgew0KICAgICAgICAgICAgdXNlcm5hbWUsDQogICAgICAgICAgICBwYXNzd29yZA0KICAgICAgICAgIH0pOw0KICAgICAgICAgIC8vIGZldGNoTG9naW4oeyB1c2VybmFtZSwgcGFzc3dvcmQgfSkudGhlbigoKSA9PiB7DQogICAgICAgICAgLy8gICAvLyDosIPmlbTliLAgaG9tZSDpobXpnaINCiAgICAgICAgICAvLyAgIHRoaXMuJHJvdXRlci5wdXNoKHsNCiAgICAgICAgICAvLyAgICAgbmFtZTogIkhvbWUiDQogICAgICAgICAgLy8gICB9KTsNCiAgICAgICAgICAvLyB9KTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyDnu5nkuIDkuKrmj5DnpLoNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXmraPnoa7nmoTlrZfmrrUiLA0KICAgICAgICAgICAgdHlwZTogImVycm9yIg0KICAgICAgICAgIH0pOw0KDQogICAgICAgICAgLy8g5riF56m65aSx6LSl55qE5a2X5q61DQogICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZmllbGRzKSB7DQogICAgICAgICAgICB0aGlzLnJ1bGVGb3JtW2tleV0gPSAiIjsNCiAgICAgICAgICB9DQogICAgICAgICAgLy8g5riF56m65aSx6LSl55qE5a2X5q6155qE5qCh6aqM5o+Q56S6DQogICAgICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS5jbGVhclZhbGlkYXRlKGZpZWxkcyk7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgcmVzZXRGb3JtKCkgew0KICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS5yZXNldEZpZWxkcygpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"loginContainer\">\r\n    <div class=\"loginContainer__inner\">\r\n      <h1>登录</h1>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"账号\" prop=\"username\">\r\n          <el-input v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { fetchLogin } from \"@/api\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      rules: {\r\n        username: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            trigger: \"blur\",\r\n            message: \"请输入正确的账号名\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            trigger: \"blur\",\r\n            message: \"请输入正确的密码\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs.ruleForm.validate((valid, fields) => {\r\n        if (valid) {\r\n          // 可以进入主页面\r\n          // 登录 -> 成功之后调整到主页\r\n          const { username, password } = this.ruleForm;\r\n          this.$store.dispatch(\"login\", {\r\n            username,\r\n            password\r\n          });\r\n          // fetchLogin({ username, password }).then(() => {\r\n          //   // 调整到 home 页面\r\n          //   this.$router.push({\r\n          //     name: \"Home\"\r\n          //   });\r\n          // });\r\n        } else {\r\n          // 给一个提示\r\n          this.$message({\r\n            message: \"请输入正确的字段\",\r\n            type: \"error\"\r\n          });\r\n\r\n          // 清空失败的字段\r\n          for (const key in fields) {\r\n            this.ruleForm[key] = \"\";\r\n          }\r\n          // 清空失败的字段的校验提示\r\n          this.$refs.ruleForm.clearValidate(fields);\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.ruleForm.resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.loginContainer {\r\n  margin: 0 auto;\r\n  width: 600px;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  padding-bottom: 50px;\r\n  border: 1px solid;\r\n}\r\n\r\n.loginContainer__inner {\r\n  width: 90%;\r\n}\r\n\r\n.loginContainer input {\r\n  margin-bottom: 20px;\r\n}\r\n.loginStyle {\r\n  width: 160px;\r\n  height: 40px;\r\n  background: rgb(50, 203, 77);\r\n  color: white;\r\n  font-size: 17px;\r\n}\r\n.inputStyle {\r\n  width: 200px;\r\n  height: 30px;\r\n  padding: 5px;\r\n  outline: none;\r\n}\r\n\r\n.inputStyle:focus {\r\n  border: 1px solid rgb(50, 203, 77);\r\n}\r\nform {\r\n  position: relative;\r\n}\r\n.exchange {\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 65px;\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}